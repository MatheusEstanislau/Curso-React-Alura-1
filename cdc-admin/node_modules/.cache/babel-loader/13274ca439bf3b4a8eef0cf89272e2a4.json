{"ast":null,"code":"var _jsxFileName = \"/home/matheus/Documentos/Curso React 1/Curso-React-Alura-1/cdc-admin/src/Autor.js\";\nimport React, { Component } from 'react';\nimport $ from 'jquery';\nimport InputCustomizado from './componentes/InputCustomizado.js';\nimport BotaoSubmitCustomizado from './componentes/BotaoSubmitCustomizado.js';\nimport PubSub from 'pubsub-js';\n\nclass FormularioAutor extends Component {\n  constructor() {\n    super();\n    this.state = {\n      nome: '',\n      email: '',\n      senha: ''\n    };\n    this.enviaForm = this.enviaForm.bind(this);\n    this.setNome = this.setNome.bind(this);\n    this.setEmail = this.setEmail.bind(this);\n    this.setSenha = this.setSenha.bind(this);\n  }\n\n  enviaForm(evento) {\n    evento.preventDefault();\n    $.ajax({\n      url: 'http://localhost:8080/api/autores',\n      contentType: 'application/json',\n      dataType: 'json',\n      type: 'post',\n      data: JSON.stringify({\n        nome: this.state.nome,\n        email: this.state.email,\n        senha: this.state.senha\n      }),\n      success: function (novaLista) {\n        PubSub.publish('atualiza-lista-autores', novaLista);\n      },\n      error: function (novaLista) {\n        console.log(\"erro\");\n      }\n    });\n  }\n\n  setNome(evento) {\n    this.setState({\n      nome: evento.target.value\n    });\n  }\n\n  setEmail(evento) {\n    this.setState({\n      email: evento.target.value\n    });\n  }\n\n  setSenha(evento) {\n    this.setState({\n      senha: evento.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"pure-form pure-form-aligned\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"pure-form pure-form-aligned\",\n      onSubmit: this.enviaForm,\n      method: \"post\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(InputCustomizado, {\n      id: \"nome\",\n      type: \"text\",\n      name: \"nome\",\n      value: this.state.nome,\n      onChange: this.setNome,\n      label: \"Nome\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(InputCustomizado, {\n      id: \"email\",\n      type: \"email\",\n      name: \"email\",\n      value: this.state.email,\n      onChange: this.setEmail,\n      label: \"Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(InputCustomizado, {\n      id: \"senha\",\n      type: \"password\",\n      name: \"senha\",\n      value: this.state.senha,\n      onChange: this.setSenha,\n      label: \"Senha\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(BotaoSubmitCustomizado, {\n      label: \"Gravar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })));\n  }\n\n}\n\nclass TabelaAutores extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"pure-table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Nome\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"email\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, this.props.lista.map(function (autor) {\n      return React.createElement(\"tr\", {\n        key: autor.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, autor.nome), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, autor.email));\n    }))));\n  }\n\n}\n\nexport default class AutorBox extends Component {\n  constructor() {\n    super();\n    this.state = {\n      lista: []\n    };\n  }\n\n  componentDidMount() {\n    $.ajax({\n      url: \"http://localhost:8080/api/autores\",\n      dataType: 'json',\n      success: function (resposta) {\n        this.setState({\n          lista: resposta\n        });\n      }.bind(this)\n    });\n    PubSub.subscribe('atualiza-lista-autores', function (topico, novaLista) {\n      this.setState({\n        lista: novaLista\n      });\n    }.bind(this));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(FormularioAutor, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(TabelaAutores, {\n      lista: this.state.lista,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/matheus/Documentos/Curso React 1/Curso-React-Alura-1/cdc-admin/src/Autor.js"],"names":["React","Component","$","InputCustomizado","BotaoSubmitCustomizado","PubSub","FormularioAutor","constructor","state","nome","email","senha","enviaForm","bind","setNome","setEmail","setSenha","evento","preventDefault","ajax","url","contentType","dataType","type","data","JSON","stringify","success","novaLista","publish","error","console","log","setState","target","value","render","TabelaAutores","props","lista","map","autor","id","AutorBox","componentDidMount","resposta","subscribe","topico"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport $ from 'jquery';\nimport InputCustomizado from './componentes/InputCustomizado.js';\nimport BotaoSubmitCustomizado from './componentes/BotaoSubmitCustomizado.js';\nimport PubSub from 'pubsub-js';\n\nclass FormularioAutor extends Component{\n    constructor() {\n        super();    \n        this.state = {nome:'',email:'',senha:''};\n        this.enviaForm = this.enviaForm.bind(this);\n        this.setNome = this.setNome.bind(this);\n        this.setEmail = this.setEmail.bind(this);\n        this.setSenha = this.setSenha.bind(this);\n      }\n      enviaForm(evento){\n        evento.preventDefault();    \n        $.ajax({\n          url:'http://localhost:8080/api/autores',\n          contentType:'application/json',\n          dataType:'json',\n          type:'post',\n          data: JSON.stringify({nome:this.state.nome,email:this.state.email,senha:this.state.senha}),\n          success: function(novaLista){\n            PubSub.publish('atualiza-lista-autores',novaLista);\n          },\n          error: function(novaLista){\n            console.log(\"erro\");\n          }      \n        });\n      }\n    \n      setNome(evento){\n        this.setState({nome:evento.target.value});\n      }\n    \n      setEmail(evento){\n        this.setState({email:evento.target.value});\n      }  \n    \n      setSenha(evento){\n        this.setState({senha:evento.target.value});\n      }\n    render(){\n        return(\n            <div className=\"pure-form pure-form-aligned\">\n                <form className=\"pure-form pure-form-aligned\" onSubmit={this.enviaForm} method=\"post\">\n                <InputCustomizado id=\"nome\" type=\"text\" name=\"nome\" value={this.state.nome} onChange={this.setNome} label=\"Nome\"/>                                              \n                <InputCustomizado id=\"email\" type=\"email\" name=\"email\" value={this.state.email} onChange={this.setEmail} label=\"Email\"/>                                              \n                <InputCustomizado id=\"senha\" type=\"password\" name=\"senha\" value={this.state.senha} onChange={this.setSenha} label=\"Senha\"/>                                                                      \n                <BotaoSubmitCustomizado label=\"Gravar\"/>\n                </form>             \n            </div>\n        );\n    }\n}\n\nclass TabelaAutores extends Component{\n    \n  render(){\n      return(\n        <div>            \n        <table className=\"pure-table\">\n          <thead>\n            <tr>\n              <th>Nome</th>\n              <th>email</th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              this.props.lista.map(function(autor){\n                return (\n                  <tr key={autor.id}>\n                    <td>{autor.nome}</td>\n                    <td>{autor.email}</td>\n                  </tr>\n                );\n              })\n            }\n          </tbody>\n        </table> \n      </div>\n      );\n  }\n\n}\n\nexport default class AutorBox extends Component{\n\n  constructor() {\n    super();    \n    this.state = {lista : []};\n  }\n\n  componentDidMount(){  \n    $.ajax({\n        url:\"http://localhost:8080/api/autores\",\n        dataType: 'json',\n        success:function(resposta){    \n          this.setState({lista:resposta});\n        }.bind(this)\n      } \n    );\n    PubSub.subscribe('atualiza-lista-autores',function(topico,novaLista){\n      this.setState({lista:novaLista});\n    }.bind(this));          \n  }\n\n  render(){\n    return(\n      <div>\n        <FormularioAutor/>\n        <TabelaAutores lista={this.state.lista}/>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}